<?php

namespace Proxies\__CG__\OCP\AppliBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CorDes extends \OCP\AppliBundle\Entity\CorDes implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'id', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'a', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'b', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'c', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'd', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'e', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'f', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'g', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'h');
        }

        return array('__isInitialized__', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'id', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'a', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'b', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'c', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'd', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'e', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'f', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'g', '' . "\0" . 'OCP\\AppliBundle\\Entity\\CorDes' . "\0" . 'h');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CorDes $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setA($a)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setA', array($a));

        return parent::setA($a);
    }

    /**
     * {@inheritDoc}
     */
    public function getA()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getA', array());

        return parent::getA();
    }

    /**
     * {@inheritDoc}
     */
    public function setB($b)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setB', array($b));

        return parent::setB($b);
    }

    /**
     * {@inheritDoc}
     */
    public function getB()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getB', array());

        return parent::getB();
    }

    /**
     * {@inheritDoc}
     */
    public function setC($c)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setC', array($c));

        return parent::setC($c);
    }

    /**
     * {@inheritDoc}
     */
    public function getC()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getC', array());

        return parent::getC();
    }

    /**
     * {@inheritDoc}
     */
    public function setD($d)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setD', array($d));

        return parent::setD($d);
    }

    /**
     * {@inheritDoc}
     */
    public function getD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getD', array());

        return parent::getD();
    }

    /**
     * {@inheritDoc}
     */
    public function setE($e)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setE', array($e));

        return parent::setE($e);
    }

    /**
     * {@inheritDoc}
     */
    public function getE()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getE', array());

        return parent::getE();
    }

    /**
     * {@inheritDoc}
     */
    public function setF($f)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setF', array($f));

        return parent::setF($f);
    }

    /**
     * {@inheritDoc}
     */
    public function getF()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getF', array());

        return parent::getF();
    }

    /**
     * {@inheritDoc}
     */
    public function setG($g)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setG', array($g));

        return parent::setG($g);
    }

    /**
     * {@inheritDoc}
     */
    public function getG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getG', array());

        return parent::getG();
    }

    /**
     * {@inheritDoc}
     */
    public function setH($h)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setH', array($h));

        return parent::setH($h);
    }

    /**
     * {@inheritDoc}
     */
    public function getH()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getH', array());

        return parent::getH();
    }

}
